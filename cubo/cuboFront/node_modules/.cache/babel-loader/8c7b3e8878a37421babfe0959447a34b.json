{"ast":null,"code":"var _jsxFileName = \"/Users/leonardofernandesmartins/code/cases/CASES/cubo/cuboFront/src/components/ChartPieData/ChartPieData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport { GlobalContext } from \"../../contexts/global/GlobalContext\";\nimport { ContainerChartPieDate, ItemLegend, Legend } from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['#4f7bd3', '#ff9900', '#109618', '#990099', '#0099c6', '#dd4477', '#66aa00', '#b82e2e', '#316395', '#994499'];\nconst options = {\n  pieHole: 0.4,\n  is3D: false,\n  legend: \"none\",\n  colors\n};\n\nconst ChartPieData = () => {\n  _s();\n\n  const {\n    states\n  } = useContext(GlobalContext);\n  const dataUsers = states.users.map(user => {\n    return [`${user.firstName} ${user.lastName}`, user.participation];\n  });\n  const totalParticipation = states.users.reduce((total, user) => {\n    return total + user.participation;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(ContainerChartPieDate, {\n    children: [/*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"PieChart\",\n      width: \"300px\",\n      height: \"300px\",\n      data: [[\"Name\", \"Participation\"], ...dataUsers, [\"Ownerless\", 100 - totalParticipation]],\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: [states.users.map((user, index) => {\n        const indexColor = index % colors.length;\n        return /*#__PURE__*/_jsxDEV(ItemLegend, {\n          color: colors[indexColor],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${user.firstName} ${user.lastName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ItemLegend, {\n        color: colors[states.users.length % colors.length],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ownerles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChartPieData, \"nsfCOBeSPhPfjlBnAyo+DCX2k5U=\");\n\n_c = ChartPieData;\nexport default ChartPieData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartPieData\");","map":{"version":3,"sources":["/Users/leonardofernandesmartins/code/cases/CASES/cubo/cuboFront/src/components/ChartPieData/ChartPieData.js"],"names":["React","useContext","Chart","GlobalContext","ContainerChartPieDate","ItemLegend","Legend","colors","options","pieHole","is3D","legend","ChartPieData","states","dataUsers","users","map","user","firstName","lastName","participation","totalParticipation","reduce","total","index","indexColor","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,qBAAT,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,UAA1D;;AAGA,MAAMC,MAAM,GAAI,CACZ,SADY,EAEZ,SAFY,EAGZ,SAHY,EAIZ,SAJY,EAKZ,SALY,EAMZ,SANY,EAOZ,SAPY,EAQZ,SARY,EASZ,SATY,EAUZ,SAVY,CAAhB;AAcA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,GADG;AAEZC,EAAAA,IAAI,EAAE,KAFM;AAGZC,EAAAA,MAAM,EAAE,MAHI;AAIZJ,EAAAA;AAJY,CAAhB;;AAOA,MAAMK,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAaZ,UAAU,CAACE,aAAD,CAA7B;AAEA,QAAMW,SAAS,GAAGD,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAkBC,IAAD,IAAU;AACzC,WAAO,CAAE,GAAEA,IAAI,CAACC,SAAU,IAAGD,IAAI,CAACE,QAAS,EAApC,EAAuCF,IAAI,CAACG,aAA5C,CAAP;AACH,GAFiB,CAAlB;AAGA,QAAMC,kBAAkB,GAAGR,MAAM,CAACE,KAAP,CAAaO,MAAb,CAAoB,CAACC,KAAD,EAAQN,IAAR,KAAiB;AAC5D,WAAOM,KAAK,GAAGN,IAAI,CAACG,aAApB;AACH,GAF0B,EAExB,CAFwB,CAA3B;AAGA,sBACI,QAAC,qBAAD;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,MAAM,EAAC,OAHX;AAII,MAAA,IAAI,EAAE,CACF,CAAC,MAAD,EAAS,eAAT,CADE,EAEF,GAAGN,SAFD,EAGF,CAAC,WAAD,EAAc,MAAMO,kBAApB,CAHE,CAJV;AASI,MAAA,OAAO,EAAEb;AATb;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,MAAD;AAAA,iBAEQK,MAAM,CAACE,KAAP,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOO,KAAP,KAAiB;AAC9B,cAAMC,UAAU,GAAGD,KAAK,GAAGjB,MAAM,CAACmB,MAAlC;AACA,4BAAO,QAAC,UAAD;AAAY,UAAA,KAAK,EAAEnB,MAAM,CAACkB,UAAD,CAAzB;AAAA,kCACH;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAA,sBAAK,GAAER,IAAI,CAACC,SAAU,IAAGD,IAAI,CAACE,QAAS;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OAND,CAFR,eASI,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEZ,MAAM,CAACM,MAAM,CAACE,KAAP,CAAaW,MAAb,GAAuBnB,MAAM,CAACmB,MAA/B,CAAzB;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAtCD;;GAAMd,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport { GlobalContext } from \"../../contexts/global/GlobalContext\";\r\nimport { ContainerChartPieDate, ItemLegend, Legend } from \"./styled\";\r\n\r\n\r\nconst colors =  [\r\n    '#4f7bd3',\r\n    '#ff9900',\r\n    '#109618',\r\n    '#990099',\r\n    '#0099c6',\r\n    '#dd4477',\r\n    '#66aa00',\r\n    '#b82e2e',\r\n    '#316395',\r\n    '#994499'\r\n]\r\n\r\n\r\nconst options = {\r\n    pieHole: 0.4,\r\n    is3D: false,\r\n    legend: \"none\",\r\n    colors\r\n};\r\n\r\nconst ChartPieData = () => {\r\n    const { states } = useContext(GlobalContext)\r\n\r\n    const dataUsers = states.users.map((user) => {\r\n        return [`${user.firstName} ${user.lastName}`, user.participation]\r\n    })\r\n    const totalParticipation = states.users.reduce((total, user) => {\r\n        return total + user.participation\r\n    }, 0)\r\n    return (\r\n        <ContainerChartPieDate>\r\n            <Chart\r\n                chartType=\"PieChart\"\r\n                width=\"300px\"\r\n                height=\"300px\"\r\n                data={[\r\n                    [\"Name\", \"Participation\"],\r\n                    ...dataUsers,\r\n                    [\"Ownerless\", 100 - totalParticipation]\r\n                ]}\r\n                options={options}\r\n            />\r\n            <Legend>\r\n                {\r\n                    states.users.map((user, index) => {\r\n                        const indexColor = index % colors.length\r\n                        return <ItemLegend color={colors[indexColor]}>\r\n                            <div></div>\r\n                            <p>{`${user.firstName} ${user.lastName}`}</p>\r\n                        </ItemLegend>\r\n                    })}\r\n                <ItemLegend color={colors[states.users.length % (colors.length)]}>\r\n                    <div></div>\r\n                    <p>Ownerles</p>\r\n                </ItemLegend>\r\n            </Legend>\r\n        </ContainerChartPieDate>\r\n    );\r\n}\r\n\r\nexport default ChartPieData"]},"metadata":{},"sourceType":"module"}